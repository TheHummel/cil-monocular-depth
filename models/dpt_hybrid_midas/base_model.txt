DPTForDepthEstimation(
  (dpt): DPTModel(
    (embeddings): DPTViTHybridEmbeddings(
      (backbone): BitBackbone(
        (bit): BitModel(
          (embedder): BitEmbeddings(
            (convolution): WeightStandardizedConv2d(
              3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False
              (pad): DynamicPad2d()
            )
            (pooler): BitMaxPool2d(
              kernel_size=(3, 3), stride=(2, 2), padding=(0, 0), dilation=(1, 1), ceil_mode=False
              (pad): DynamicPad2d()
            )
            (pad): Identity()
            (norm): BitGroupNormActivation(
              32, 64, eps=1e-05, affine=True
              (activation): ReLU()
            )
          )
          (encoder): BitEncoder(
            (stages): ModuleList(
              (0): BitStage(
                (layers): Sequential(
                  (0): BitBottleneckLayer(
                    (downsample): BitDownsampleConv(
                      (conv): WeightStandardizedConv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                    )
                    (conv1): WeightStandardizedConv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 64, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 64, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (1): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 64, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 64, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (2): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 64, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 64, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                )
              )
              (1): BitStage(
                (layers): Sequential(
                  (0): BitBottleneckLayer(
                    (downsample): BitDownsampleConv(
                      (conv): WeightStandardizedConv2d(
                        256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
                        (pad): DynamicPad2d()
                      )
                      (norm): BitGroupNormActivation(
                        32, 512, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                    )
                    (conv1): WeightStandardizedConv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 128, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(
                      128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False
                      (pad): DynamicPad2d()
                    )
                    (norm2): BitGroupNormActivation(
                      32, 128, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 512, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (1): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 128, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 128, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 512, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (2): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 128, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 128, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 512, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (3): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 128, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 128, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 512, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                )
              )
              (2): BitStage(
                (layers): Sequential(
                  (0): BitBottleneckLayer(
                    (downsample): BitDownsampleConv(
                      (conv): WeightStandardizedConv2d(
                        512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
                        (pad): DynamicPad2d()
                      )
                      (norm): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                    )
                    (conv1): WeightStandardizedConv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(
                      256, 256, kernel_size=(3, 3), stride=(2, 2), bias=False
                      (pad): DynamicPad2d()
                    )
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (1): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (2): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (3): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (4): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (5): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (6): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (7): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                  (8): BitBottleneckLayer(
                    (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm1): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                    (norm2): BitGroupNormActivation(
                      32, 256, eps=1e-05, affine=True
                      (activation): ReLU()
                    )
                    (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm3): BitGroupNormActivation(
                      32, 1024, eps=1e-05, affine=True
                      (activation): Identity()
                    )
                    (drop_path): Identity()
                    (activation): ReLU()
                  )
                )
              )
            )
          )
          (norm): Identity()
          (pooler): AdaptiveAvgPool2d(output_size=(1, 1))
        )
      )
      (projection): Conv2d(1024, 768, kernel_size=(1, 1), stride=(1, 1))
    )
    (encoder): DPTViTEncoder(
      (layer): ModuleList(
        (0-11): 12 x DPTViTLayer(
          (attention): DPTViTAttention(
            (attention): DPTSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
            )
            (output): DPTViTSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (intermediate): DPTViTIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): DPTViTOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (layernorm_before): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
          (layernorm_after): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        )
      )
    )
    (layernorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
  )
  (neck): DPTNeck(
    (reassemble_stage): DPTReassembleStage(
      (layers): ModuleList(
        (0-1): 2 x Identity()
        (2): DPTReassembleLayer(
          (projection): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1))
          (resize): Identity()
        )
        (3): DPTReassembleLayer(
          (projection): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1))
          (resize): Conv2d(768, 768, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        )
      )
      (readout_projects): ModuleList(
        (0-1): 2 x Sequential(
          (0): Identity()
        )
        (2-3): 2 x Sequential(
          (0): Linear(in_features=1536, out_features=768, bias=True)
          (1): GELUActivation()
        )
      )
    )
    (convs): ModuleList(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (2-3): 2 x Conv2d(768, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (fusion_stage): DPTFeatureFusionStage(
      (layers): ModuleList(
        (0-3): 4 x DPTFeatureFusionLayer(
          (projection): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (residual_layer1): DPTPreActResidualLayer(
            (activation1): ReLU()
            (convolution1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (activation2): ReLU()
            (convolution2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (residual_layer2): DPTPreActResidualLayer(
            (activation1): ReLU()
            (convolution1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (activation2): ReLU()
            (convolution2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
    )
  )
  (head): DPTDepthEstimationHead(
    (head): Sequential(
      (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): Upsample(scale_factor=2.0, mode='bilinear')
      (2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
      (5): ReLU()
    )
  )
)